# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
#GTEST_DIR = ..
GTEST_DIR=/home/xma/github/knowledge/programming/c++/unit_tests_with_google_test/googletest/googletest

GMOCK_DIR = /home/xma/github/knowledge/programming/c++/unit_tests_with_google_test/googletest/googlemock

# Where to find user code.
#USER_DIR = ../samples
USER_DIR = .
MOCK_DIR = ../mock_class1
ANIMAL_DIR = ../class1
ANIMAL_HOUSE_DIR = ../class2

# newly added by xp
#LDFLAGS= -L$(USER_DIR) # -lz ; use -L to point to where shared lib is, and -l to include the shared lib
CPPFLAGS += -I$(USER_DIR) -I${MOCK_DIR} -I${ANIMAL_DIR} -I${ANIMAL_HOUSE_DIR}# point to where .h files are; 
#CXXFLAGS += -std=c++11

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include \
		-isystem $(GMOCK_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
#TESTS = sample1_unittest
TESTS = animal_house.test

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

GMOCK_HEADERS = $(GMOCK_DIR)/include/gmock/*.h \
                $(GMOCK_DIR)/include/gmock/internal/*.h

# House-keeping build targets.

all : $(TESTS)

clean :
	rm -f $(TESTS) gtest.a gtest_main.a gmock.a gmock_main.a *.o

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# gmock stuff
GMOCK_SRCS_ = $(GMOCK_DIR)/src/*.cc $(GMOCK_HEADERS)

gmock-all.o : $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GMOCK_DIR) $(CXXFLAGS) -c \
            $(GMOCK_DIR)/src/gmock-all.cc

gmock_main.o : $(GMOCK_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GMOCK_DIR) $(CXXFLAGS) -c \
            $(GMOCK_DIR)/src/gmock_main.cc

gmock.a : gmock-all.o
	$(AR) $(ARFLAGS) $@ $^

gmock_main.a : gmock-all.o gmock_main.o
	$(AR) $(ARFLAGS) $@ $^

# compile our codes
animal_house.o : ${ANIMAL_HOUSE_DIR}/animal_house.cpp ${ANIMAL_HOUSE_DIR}/animal_house.h $(GTEST_HEADERS) $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c ${ANIMAL_HOUSE_DIR}/animal_house.cpp -o $@

animal_house_unittest.o : $(USER_DIR)/animal_house_unittest.cpp $(GTEST_HEADERS) $(GMOCK_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/animal_house_unittest.cpp -o $@

animal_house.test : animal_house.o animal_house_unittest.o gtest_main.a gmock_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@ $(LDFLAGS)
